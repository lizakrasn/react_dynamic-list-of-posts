{"version":3,"sources":["components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/api.js","components/PostDetails/CommentsList.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","selectedPost","openPost","closePost","setSelectedPost","className","map","post","key","id","userId","title","type","onClick","defaultProps","NewCommentForm","onSubmit","useState","name","setName","email","setEmail","comment","setComment","event","preventDefault","body","value","onChange","target","placeholder","required","BASE_URL","getUserPosts","a","fetch","response","json","data","filter","getPostDetails","postId","getPostComments","deleteComment","commentId","method","addComment","JSON","stringify","headers","CommentsList","postComments","isCommentShown","setIsCommentShown","length","PostDetails","selectedPostId","postDetails","setPostDetails","setPostComments","useEffect","commentsPromise","fetchData","newComment","App","setPosts","selectedUserId","setSelectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfe01cba.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './PostsList.scss';\r\n\r\nexport const PostsList = ({\r\n  posts,\r\n  selectedPost,\r\n  openPost,\r\n  closePost,\r\n  setSelectedPost,\r\n}) => (\r\n  <div className=\"PostsList\">\r\n    <h2>Posts:</h2>\r\n\r\n    <ul className=\"PostsList__list\">\r\n      {posts.map(post => (\r\n        <li key={post.id} className=\"PostsList__item\">\r\n          <div>\r\n            <b>\r\n              [User #\r\n              {post.userId}\r\n              ]:\r\n              {' '}\r\n            </b>\r\n            {post.title}\r\n          </div>\r\n\r\n          {selectedPost === post.id\r\n            ? (\r\n              <button\r\n                type=\"button\"\r\n                className=\"PostsList__button button\"\r\n                onClick={() => {\r\n                  closePost(setSelectedPost);\r\n                }}\r\n              >\r\n                Close\r\n              </button>\r\n            )\r\n            : (\r\n              <button\r\n                type=\"button\"\r\n                className=\"PostsList__button button\"\r\n                onClick={() => {\r\n                  openPost(setSelectedPost, post.id);\r\n                }}\r\n              >\r\n                Open\r\n              </button>\r\n            )}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nPostsList.defaultProps = {\r\n  posts: [],\r\n  selectedPost: null,\r\n};\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.arrayOf(PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    userId: PropTypes.number.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n  })),\r\n  selectedPost: PropTypes.number,\r\n  openPost: PropTypes.func.isRequired,\r\n  closePost: PropTypes.func.isRequired,\r\n  setSelectedPost: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './NewCommentForm.scss';\r\n\r\nexport const NewCommentForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [comment, setComment] = useState('');\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const newComment = {\r\n      name,\r\n      email,\r\n      body: comment,\r\n    };\r\n\r\n    onSubmit(newComment);\r\n\r\n    setName('');\r\n    setEmail('');\r\n    setComment('');\r\n  }\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className=\"NewCommentForm\"\r\n    >\r\n      <div className=\"form-field\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={event => setName(event.target.value)}\r\n          placeholder=\"Your name\"\r\n          className=\"NewCommentForm__input\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-field\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={event => setEmail(event.target.value)}\r\n          placeholder=\"Your email\"\r\n          className=\"NewCommentForm__input\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-field\">\r\n        <textarea\r\n          name=\"body\"\r\n          placeholder=\"Type comment here\"\r\n          value={comment}\r\n          onChange={event => setComment(event.target.value)}\r\n          className=\"NewCommentForm__input\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        className=\"NewCommentForm__submit-button button\"\r\n      >\r\n        Add a comment\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nNewCommentForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\r\n\r\nexport async function getAllPosts() {\r\n  const response = await fetch(`${BASE_URL}/posts`);\r\n\r\n  return (await response.json()).data;\r\n}\r\n\r\nexport async function getUserPosts(userId) {\r\n  const response = await fetch(`${BASE_URL}/posts`);\r\n  const posts = (await response.json()).data;\r\n\r\n  if (!userId) {\r\n    return posts;\r\n  }\r\n\r\n  return posts.filter(post => post.userId === userId);\r\n}\r\n\r\nexport async function getPostDetails(postId) {\r\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\r\n\r\n  return (await response.json()).data;\r\n}\r\n\r\nexport async function getPostComments(postId) {\r\n  const response = await fetch(`${BASE_URL}/comments`);\r\n  const { data } = await response.json();\r\n\r\n  return data.filter(comment => comment.postId === postId);\r\n}\r\n\r\nexport async function deleteComment(commentId) {\r\n  await fetch(`${BASE_URL}/comments/${commentId}`, {\r\n    method: 'DELETE',\r\n  });\r\n}\r\n\r\nexport async function addComment(comment) {\r\n  await fetch(`${BASE_URL}/comments`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(comment),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n}\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CommentsList = ({ postComments, deleteComment }) => {\r\n  const [isCommentShown, setIsCommentShown] = useState(false);\r\n\r\n  if (postComments.length === 0) {\r\n    return <p>No comments</p>;\r\n  }\r\n\r\n  return (\r\n    <section className=\"PostDetails__comments\">\r\n      {isCommentShown\r\n        ? (\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"button\"\r\n              onClick={() => setIsCommentShown(false)}\r\n            >\r\n              Hide\r\n              {' '}\r\n              {postComments.length}\r\n              {' '}\r\n              comment(s)\r\n            </button>\r\n\r\n            <ul className=\"PostDetails__list\">\r\n              {postComments.map(comment => (\r\n                <li key={comment.id} className=\"PostDetails__list-item\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"PostDetails__remove-button button\"\r\n                    onClick={() => deleteComment(comment.id)}\r\n                  >\r\n                    X\r\n                  </button>\r\n                  <p>{comment.body}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )\r\n        : (\r\n          <button\r\n            type=\"button\"\r\n            className=\"button\"\r\n            onClick={() => setIsCommentShown(true)}\r\n          >\r\n            Open\r\n            {' '}\r\n            {postComments.length}\r\n            {' '}\r\n            comment(s)\r\n          </button>\r\n        )\r\n      }\r\n    </section>\r\n  );\r\n};\r\n\r\nCommentsList.defaultProps = {\r\n  postComments: [],\r\n};\r\n\r\nCommentsList.propTypes = {\r\n  postComments: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    postId: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n  })),\r\n  deleteComment: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NewCommentForm } from '../NewCommentForm';\r\nimport './PostDetails.scss';\r\nimport {\r\n  getPostDetails,\r\n  getPostComments,\r\n  deleteComment,\r\n  addComment,\r\n} from '../../api/api';\r\nimport { CommentsList } from './CommentsList';\r\n\r\nexport const PostDetails = ({ selectedPostId }) => {\r\n  const [postDetails, setPostDetails] = useState(null);\r\n  const [postComments, setPostComments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async() => {\r\n      setPostComments([]);\r\n      const commentsPromise = getPostComments(selectedPostId);\r\n\r\n      setPostDetails(await getPostDetails(selectedPostId));\r\n      setPostComments(await commentsPromise);\r\n    };\r\n\r\n    fetchData();\r\n  }, [selectedPostId]);\r\n\r\n  return (\r\n    <div className=\"PostDetails\">\r\n      <h2>Post details:</h2>\r\n\r\n      <section className=\"PostDetails__post\">\r\n        <p>{postDetails ? postDetails.body : 'Loading...'}</p>\r\n      </section>\r\n\r\n      <CommentsList\r\n        postComments={postComments}\r\n        deleteComment={async(commentId) => {\r\n          await deleteComment(commentId);\r\n          setPostComments(await getPostComments(selectedPostId));\r\n        }}\r\n      />\r\n\r\n      <section>\r\n        <div className=\"PostDetails__form-wrapper\">\r\n          <NewCommentForm onSubmit={async(comment) => {\r\n            const newComment = {\r\n              ...comment, postId: selectedPostId,\r\n            };\r\n\r\n            await addComment(newComment);\r\n            setPostComments(await getPostComments(selectedPostId));\r\n          }}\r\n          />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostDetails.propTypes = {\r\n  selectedPostId: PropTypes.number.isRequired,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.scss';\r\nimport './styles/general.scss';\r\nimport { PostsList } from './components/PostsList';\r\nimport { PostDetails } from './components/PostDetails';\r\nimport { getUserPosts } from './api/api';\r\n\r\nfunction openPost(setSelectedPost, postId) {\r\n  setSelectedPost(postId);\r\n}\r\n\r\nfunction closePost(setSelectedPost) {\r\n  setSelectedPost(null);\r\n}\r\n\r\nconst App = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedPost, setSelectedPost] = useState(null);\r\n  const [selectedUserId, setSelectedUserId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async() => {\r\n      setPosts(await getUserPosts(selectedUserId));\r\n    };\r\n\r\n    fetchData();\r\n  }, [selectedUserId]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App__header\">\r\n        <label>\r\n          Select a user: &nbsp;\r\n\r\n          <select\r\n            onChange={event => setSelectedUserId(+event.target.value)}\r\n            className=\"App__user-selector\"\r\n          >\r\n            <option value=\"0\">All users</option>\r\n            <option value=\"1\">Leanne Graham</option>\r\n            <option value=\"2\">Ervin Howell</option>\r\n            <option value=\"3\">Clementine Bauch</option>\r\n            <option value=\"4\">Patricia Lebsack</option>\r\n            <option value=\"5\">Chelsey Dietrich</option>\r\n            <option value=\"6\">Mrs. Dennis Schulist</option>\r\n            <option value=\"7\">Kurtis Weissnat</option>\r\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\r\n            <option value=\"9\">Glenna Reichert</option>\r\n            <option value=\"10\">Leanne Graham</option>\r\n          </select>\r\n        </label>\r\n      </header>\r\n\r\n      <main className=\"App__main\">\r\n        <div className=\"App__sidebar\">\r\n          <PostsList\r\n            posts={posts}\r\n            selectedPost={selectedPost}\r\n            openPost={openPost}\r\n            closePost={closePost}\r\n            setSelectedPost={setSelectedPost}\r\n          />\r\n        </div>\r\n\r\n        {selectedPost\r\n          ? (\r\n            <div className=\"App__content\">\r\n              <PostDetails selectedPostId={selectedPost} />\r\n            </div>\r\n          )\r\n          : <></>\r\n        }\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}